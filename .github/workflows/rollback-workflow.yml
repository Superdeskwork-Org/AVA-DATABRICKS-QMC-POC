name: Post-Deployment Approval and Rollback

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose action"
        required: true
        type: choice
        options:
          - Approve
          - Reject

jobs:
 rollback-steps:
    runs-on: self-hosted
  
    steps:
      # Step 1: Simulate Manual Approval with Inputs
      - name: Simulate Post-Deployment Approval
        run: |
          echo "Post-deployment approval requested. Waiting for QA approver to approve."
          echo "Selected action: ${{ github.event.inputs.action }}"
          $ACTION = "${{ github.event.inputs.action }}".ToLower()  # Normalize to lowercase in PowerShell
          echo "action=$ACTION" >> $env:GITHUB_ENV

      # Debug Action Variable
      - name: Debug Action Variable
        run: |
          echo "Action variable value: ${{ env.action }}"

      # Step 2: Check Out Repository
      - name: Check Out Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all commits to access the previous commit ID

      # Debug Commit History
      - name: Debug Commit History
        run: |
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Previous commit: $(git rev-parse HEAD^)"

     # Step 3: Revert to Previous Commit if Rejected
      - name: Revert to Previous Commit
        if: env.action == 'reject'
        run: |
          echo "Reverting deployment to previous commit..."
          $PREVIOUS_COMMIT_ID = git rev-parse HEAD^  # Get the previous commit ID
          echo "Previous commit ID: $PREVIOUS_COMMIT_ID"
          git checkout $PREVIOUS_COMMIT_ID

     # Step 4: Redeploy Application
      - name: Redeploy Application
        if: env.action == 'reject'
        run: |
          echo "Redeploying application from commit: ${{ env.PREVIOUS_COMMIT_ID }}"
          
          # Ensure the QA directory exists
          if (-Not (Test-Path "QA")) {
            echo "QA directory does not exist. Creating it..."
            New-Item -ItemType Directory -Path "QA"
          }
          cd QA

          # Checkout the AVA-DATABRICKS-QMC-POC directory at the previous commit
          if (-Not (Test-Path "AVA-DATABRICKS-QMC-POC")) {
            echo "AVA-DATABRICKS-QMC-POC directory does not exist. Cloning it..."
            git clone --branch main "${{ vars.REPO_PAT }}" AVA-DATABRICKS-QMC-POC
          }
          cd AVA-DATABRICKS-QMC-POC

          # Checkout the previous commit explicitly
          echo "Checking out the previous commit: ${{ env.PREVIOUS_COMMIT_ID }}"
          git checkout ${{ env.PREVIOUS_COMMIT_ID }}

          # Synchronize with Databricks
          databricks sync Notebooks /Workspace/Shared/Notebooks
          echo "Deployment reverted successfully."

      # Step 5: Confirm Approval
      - name: Confirm Approval
        if: env.action == 'approve'
        run: |
          echo "Deployment approved. No further action required."
