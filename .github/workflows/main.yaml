name: Databricks Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy-to-dev:
    runs-on: self-hosted
    steps:
      # Step 1: Install Chocolatey if not already installed
      - name: Install Chocolatey
        shell: pwsh
        run: |
          if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
              Write-Output "Installing Chocolatey..."
              Set-ExecutionPolicy Bypass -Scope Process -Force; `
              [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
              iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }
          choco --version

      # Step 2: Install Databricks CLI using Chocolatey
      - name: Install Databricks CLI
        shell: pwsh
        run: |
          Write-Output "Installing Databricks CLI using Chocolatey..."
          choco install databricks-cli -y
          databricks --version

      # Step 3: Download Files from Remote Repository
      - name: Download Files from Remote Repository
        shell: pwsh
        run: |
          if (Test-Path -Path "AVA-DATABRICKS-QMC-POC") {
            Write-Output "Folder exists. Pulling latest changes..."
            Set-Location AVA-DATABRICKS-QMC-POC
            git pull origin main
            Set-Location ..
          } else {
            Write-Output "Folder does not exist. Cloning the repository..."
            git clone --branch main "${{ vars.repo_url }}" AVA-DATABRICKS-QMC-POC
          }

      # Step 4: Configure QA Databricks Authentication and Import Workspace
      - name: Prod - OBM
        shell: cmd
        run: |
          set TEMP_DIR=%USERPROFILE%\.databricks_temp
          mkdir %TEMP_DIR%
          echo [prod] > %TEMP_DIR%\.databrickscfg
          echo host = "${{ vars.QA_DATABRICKS_HOST }}" >> %TEMP_DIR%\.databrickscfg
          echo token = "${{ secrets.QA_DATABRICKS_TOKEN }}" >> %TEMP_DIR%\.databrickscfg
          set DATABRICKS_CONFIG_FILE=%TEMP_DIR%\.databrickscfg
          databricks auth profiles
          databricks workspace import-dir --overwrite . "${{ vars.QA_WORKSPACE_PATH }}" -p QA